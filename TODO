实现qmap_t，用主目录下的那个函数进行散列，然后再做一个函数可以设定创建时整个表的长度，默认512个单位。如果产生了碰撞，就进行链式扩展，利用qm_t类型。
利用qm_t类型实现qstack_t即栈。
解决变量名作用域的方式是每次注册一个或多个变量的时候都会返回一个惟一的作用域编号，在执行块完毕之后将这些作用域编号对应的变量全部注销。但需要注意的是，由于变量在全局都是通过一个qmap_t保存下来的（这也就意味着即使是作用域不同也不能有两个名字不同的变量了），再加上qm_t并不是一个纯粹的链表，不能进行随机的插入删除，所以仅仅是单纯地将这些变量标记为不可用。除此之外，全局存在另一个表，表示从作用域编号到变量的一对多映射。程序需要维护这两个表并使它们同步。
map和list类型需要进行修改，它们没有必要设计成显式指定元素类型，它们完全可以同时包含不同类型的元素。
需要补充rank运算符。同时，要遍历map只有从头到尾走一遍，目前还没有发现更好的办法。
函数的传值传引用并不难，指定是否需要复制mobj对象即可。问题在于符号表的查找。

最后需要完成的工作：
变量的声明部分，以及变量查找等内容
函数部分
map和list的初始化
改进错误处理